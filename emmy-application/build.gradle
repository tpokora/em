plugins {
    id 'io.spring.dependency-management'
    id 'java'
    id 'idea'
    id 'org.springframework.boot'
}

dependencyManagement {
    imports {
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
    }
}

def moduleName = "emmy.application"

version 'unspecified'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

compileJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}

compileTestJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
                '--add-modules', 'org.junit.jupiter.api',
                '--add-reads', "$moduleName=org.junit.jupiter.api",
                '--patch-module', "$moduleName=" + files(sourceSets.test.java.srcDirs).asPath,
        ]
        classpath = files()
    }
}

sourceCompatibility = 11.0
targetCompatibility = 11.0

def junitVersion = '5.7.0'
def mockitoVersion = '3.5.0'

dependencies {
    implementation project(":emmy-common")
    implementation project(":emmy-domain")
    implementation project(":emmy-persistance")
    implementation project(":emmy-config")

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation('org.springframework.boot:spring-boot-starter-validation:2.3.5.RELEASE') {
        exclude group: 'org.glassfish', module:'jakarta.el'
    }
    implementation('com.sun.xml.messaging.saaj:saaj-impl:1.5.0') {
        exclude group: 'org.jvnet.staxex', module: 'stax-ex'
    }
    implementation group: 'javax.xml.soap', name: 'javax.xml.soap-api', version: '1.3.5'
    implementation('org.springframework.boot:spring-boot-starter-data-jpa') {
        exclude group:'javax.transaction', module:'javax.transaction-api'
    }
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    implementation group: 'org.javassist', name: 'javassist', version: '3.27.0-GA'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'org.postgresql:postgresql:42.1.1'
    implementation 'org.slf4j:slf4j-api:1.7.29'

    implementation 'org.springframework.boot:spring-boot-starter-security'

    testImplementation project(":emmy-persistance")

    // Tests dependencies
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: "com.vaadin.external.google", module: "android-json"
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        exclude group: 'junit', module: 'junit'
        exclude group: 'org.hamcrest', module: 'hamcrest-library'
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }

    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testImplementation(group: 'org.junit.vintage', name: 'junit-vintage-engine', version: "${junitVersion}") {
        exclude group: 'junit', module: 'junit'
    }
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: "${junitVersion}"
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: "${junitVersion}"
    testImplementation group: 'org.mockito', name: 'mockito-core', version: "${mockitoVersion}"
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: "${mockitoVersion}"
    testImplementation('org.springframework.security:spring-security-test')
    testImplementation group: 'com.h2database', name: 'h2', version: '1.4.199'

    testImplementation("org.junit.platform:junit-platform-runner:1.5.2") {
        exclude group: 'junit', module: 'junit'
    }
}

test {
    useJUnitPlatform()
}

ext.moduleName = 'org.tpokora.application'
