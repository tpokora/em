// configuration for dev-tools
//configurations {
//    developmentOnly
//    runtimeClasspath {
//        extendsFrom developmentOnly
//    }
//}

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "org.junit.platform:junit-platform-gradle-plugin:1.1.0"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.5.RELEASE"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.0.2.RELEASE"
    }
}

group 'org.tpokora'
version '1.0-SNAPSHOT'

def junitVersion = '5.7.0'
def mockitoVersion = '3.5.0'

subprojects {
    apply plugin: "java"
    apply plugin: "io.spring.dependency-management"

    sourceCompatibility = 1.11

    test {
        useJUnitPlatform()
    }

    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'https://repo.spring.io/snapshot' }
        maven { url 'https://repo.spring.io/plugins-release' }
        maven { url 'https://mvnrepository.com/artifact/org.javassist/javassist' }
    }

    // required for modules
    afterEvaluate {
        compileJava {
            inputs.property("moduleName", moduleName)
            doFirst {
                options.compilerArgs = [
                        '--module-path', classpath.asPath
                ]
                classpath = files()
            }
        }
    }

    test {
        afterTest { desc, result ->
            logger.quiet "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
        }
    }

    dependencies {
        testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
        testImplementation "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
        testImplementation "org.junit.platform:junit-platform-runner:1.5.2"
    }
}